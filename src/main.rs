use ed25519_dalek::{PUBLIC_KEY_LENGTH, SIGNATURE_LENGTH, PublicKey, Verifier};
use aes_gcm::{Aes256Gcm, Key, Nonce, Tag};
use aes_gcm::aead::{Aead, NewAead};
use sha2::{Sha256, Digest};
use serde::{Deserialize, Serialize};
use std::error::{Error};
use hex::FromHex;
use std::str;

const KEYGEN_LICENSE_FILE: &str = "-----BEGIN LICENSE FILE-----\neyJlbmMiOiJXSmR1dm5mZWxOTDhYeFpQbzZDSjRSQUNjSUVwR0Fhc3grTnFt\nejVuLytBa3JPdGZSTENOM0dqMGpnc2VXSnBRQXVoZWE4eGlFdEU2c0lINytD\nMnNMMG5uNGg3WFVNa2JUL2lOd29vZnNzY0pJSS83OUNsblU2MWRwQml0YnpM\nQS8vbkk2eGlxSzcwcndVSG1tSTFqTHVnWVJXMG1oSEtHRVdZaCtZVUhIazN0\neERqZnNJT1VxTW53bnJqVUxsZkdLaktQbUNUMmgyaC93eE1zYnBieW1aNWND\ndUwzR29MTmRxRTdOMDhadjJER0Qvb0Q1allQOE11RmFMa1U2UTMyM21DMHFW\ndzRqT3lyQ0o1bndSZDR4N2lvMU1aeFVmd0xzblZBSGhHdDhyS2QwK3BuNXl1\neTNESzc3di9JVDhZK3JLVUFFTSsrMWdGOFFYdzdWVkd5RjY3d0NUdUlUK1FM\nVmhnbngwTmQvT1ptanRHaE9JOFlsYllCaWswTDdwNjM3ZHYxcTZSTHJvZzd3\nc1NDMHpqVGttLzY5d0Zyd2RqZ3lydDczMTB1ZXhqVTZuNTlIZ1N4YTJaVStK\nK3VPc2IzSGJEWHpmaFoxTXlHdSs4dXNIWGdZVk42WGxRMXBHWEZ6Q2c4anRk\nN1J2QWVyTDl0SXZoNjUwVmNNRkg1ak9hNjE1MXVoV1Rna0tOU29wZFpIZjZR\nSExoNFJnNzljQU5RN0tsbXorODdmM1VMejk5UEVEbVJxUTRGclNnTnlubHZ1\nYnNQNXQ3NVU5SndCZk13cWlKZXpFMkdtQ0J6ZGovdnlBOVkrZFErZGJhWkdZ\nbDIrUkRreFZldDMwejBqSVNHWC95YiswNDRnUVQ4Y2hCck5md2R0WUQwYXhJ\nUkRnN1lEbW5FcTBFVklmVEFqSDNXQ2NqZktTL2NLdjM1a3c2K1FVaFVLUE5a\nZjN0anJMUE5LbFdaaGlaWjdHR2FkVzJURVc0bmFob3JpcnVYblNja1E5Mk0v\nZEhMSUxjREQ5MFdTYVhCbThvRnlhdGZIcWZTZXUwVFRKYXliYnZ0OWhmM0JN\nTmgyNnpIaWd4SDlWUkNoWGU5dWtQZUw5ZXpQRUQ2SGdCZG1BSnkraTZaQzht\ndHRPalhnUm5lWTg2NDQxYnhPbTAwZUhzY2dJUFJPdUluNU9ZNlk4clljQ2tj\nTWN2dklPa2lhS2NQaDFjZHllYkpoaUlBYU4xVVZUWnRVb0NLbVIwVVhWb1ZR\nenZHMXY5aWV1dG1zM2pwVDlyN3E1VFB2UjRKN0R3K3dGcDJqZVpFREFqUnhv\nd2lYT0UxeTNaWFhPNXVNWUpLMFNzaWN4bU5KUmZxTmtHblN0ekNlRjNSSXFZ\nWWpYSUVLdFU4N0ZhK08vVEJDQkNFVlJwSklTTzFDb21jTGludTNnWm4xSDFi\neXdMbzlCNkw2T3l6M0x3ampoZlkvU2hoZ2ZnR0pzMGRPZk9Qc1o4K3p1YW1y\nWWdlQ0lBTHJUK2dTVkcvUlBEeVlqY3lGcHpOampuWVFFSWhzZDg0T0ZyUmJO\nWCtmT2tzb2hibU03S1RHM3RhQXNwYkxlNHlwQ3ZmWEdMR2JqTVVSMWd3VjNR\nR1Z4WnBJcTZockIyd3RybXYvS201c0dMcTIzTDZQMVkzWkgyTjdYRlp2SGJK\nZ1B4RDdXbnBNckdrZkhCVEJabERjRzYwUE55dzhLWHF0WnZmcGx3akR0VEVG\nLzNEaHJYdUdzUGhoSTlUbEdzN2Jud0xnNW1mTldQclBwVWl2bWU5aW1WaVBZ\nUXZ2SkhTUnF2eUI4RXg5OEczSG82Nk85R0RrME1WRlVFYXN5UWFGOVE3dWxt\nalBrN3VkL1ZIMms1RlBxelVTdllRZm1QRGZVVkZOK2xDWnBFenBzOU9waTdl\nL25rUWcyVDFaR1JBandDVzJIV1JCMERkejB2aVlyVlQyNHoweWNFamVqeFJV\nblVyVENTaFF3S1FlazJmS013eVNPRjBNUkRGdDNENDFSbmNqWXRLWHd5eTd1\nQzFyZzJiNHNSeDBSay9sSUoySDVWdktQeUtlWUxTSldxNFN6emNTSjY2NnVn\nMGVXL0J1RmwzemNwOFI3UWtlM1d0NkVoTVpQRGdGS3dGTUNGZWpySlo3M2xD\nbFNrNHZydEdraFgvVEVUQitKWlRKeEI0VWIvTDNtbjBVZmtMemtDNnliSTF1\nMGQ3QVlSbE1WMFFtMlZ6KzY1Q05oQ2IwVEc5TEJ6OHc1dXJPdXdBd0taT0ZW\nTnJZMFNzK2wwbFBFczBFSzg3TE4wL3dZWHRGY0ZnMVJydG9RU210ZEszSzBt\nbi9OaFllSS9OM25EV3lEZDZVRFN5NUxzNzZZTnBxMkRjM0FuTGxLZ0NQZFVo\nSFFTUFMwYnV0dFlTSUJ3NkNnc1JFNEpyck0rS1k0Uzk3UmVKOXN4aytOMmpG\nUmtSUXBjU0lCcTErNDB4UmZ1UmZuLzlDL0s1eFFsQWxPeE12VkEwaXRtd0Nv\na2c5N1FJWXFPQzFIRkFRZXBuZXQyTWx3MUp0K2o3UDNKbjBCVHNkY0VXRVhN\ncWJ4c2Z0K2pQU3JQMUtzem9oL1duTlIzUDdQWHFWN3NPZi9kYVAzVVdmU2Ux\nY0FPbnZOS0tqWWZwM2pFWlV0cG4xaG5PRVN3Zk1PQ2ZTV1g5Z1RTRzFrMGVV\nV1hnSG0ydEhERUp5ZXFpTjNXaUpVQ1VTWW0rUHFBbnBPVlNKbXYwanUyZXo3\ncU9yUTFWdkdiNnJqekwvQ2Z2cG03eGdBWGFGU1N2akI3aXBSWjhxMENEeVJV\nRmRjMTIxWUFLbkJkcWhUUVpka1VOV09EcVAvY2IwdWJaaW9YUVEraUpMQzZa\nWi80N1hCeFFEZ2NpNTZFdEk2dGozYmtuY0k5d09ad1lHNm1SQXBGbHRxWkla\nbERvSWF4Rmd5cDZVUUd3MVNDbnJ3Y25xTjhVOG91TnRjTGpzNWxrQ3ljQWZh\nVGF5cXNvV1VPOTA3aVV3SER1dFFic0xPdCs5b0JYVm13VmNBSWgwN2FmblNN\neCtKaWNaOEh2VWo5ekpRcEZJcUZJT0JrbkplUHRaVzlLditjR3lmUE9xRkVD\nS0p6OXB5eCt5R1NGVjlQcm9iT3JWV3A2a1hEVkZRR282THhiK2pScHFrRE1J\nNG1zRnNJaXVpM0dVSkFGelp5MkNCc0c3SnNaaDRLT0NwaU5qWVczNm85M2U5\nQzlncWQwQnJxclFmelVQOFdDUHh2NU5SOFFKdEJZTDdYZjBnZFAybHhKU1ZT\ncndWV3hCZHZ2SkYwa25tenl5YnpydlQ5K2UzVlF2bHNORm1RS3RQTjhqaWU3\nYWt6TDlUbU5xQ3pBWFpYRHZ0SFNQVDJxb3dWQ3RPNkE5WmtDbWRqMEZyczFI\nZnVmRGtHMStSbVNpdjI0TWprcXpXcG45cy9kVkdja3k3WTgrenY3U3BZaVp2\ncmNoME1naTlJZEMvd3JsWmlGSHFLdTREeEpMNVFyVEo1blZVR2YxS3p4Tmd4\nZklvQlViUDU3b0hJLzlaK0Jmck5MTWk3UEdJb3ZmNW44TW1wcXpXSUpSWXpG\nUHNmZ1lHYjMxdkR2MC9EV0NycGp4TXdsOElOK2lXQS9McFI5LzZJTFVvc29w\nK0JmUlNCalB3end5UVp4dk4weFMvVWFId2p6WUx3c0JEa2UyY2xHK1EyRk9V\nV2ZERFFKV0NkQ0JxTjVWRHJKV09LMmJJZEZwR3p0bGRpOVpwa1FzMzBpUm9j\nWllONGVIcjA5Nnhrb3c4RTdzNTl4WWM0NlVJcmZHVmRGOHo0YjJidk5jTmFT\nR3NyOEtqd2lGd3J3RFBLTXhHcC9Cd0VKa2g4YkVKVFpGdHA3N0gwTW0zNVZJ\nd2MzdW83Y0pSWTNlci93aHNYeWVSMnlNQlRxM3dNRm5NUlBpOGRuSVRudHFH\nUG51UUhaNGRjUURZK0lnVXYzUVlFWWxmNDgvNEE2VldXQnJWbUtzRVJIQUc1\nM0dwU0ZaTzdjQkpRZyttY2JRVHBOVnNvckloR090T29oMEN1N1ZTeCtQTU1Z\nMUV3Rm55dmMxaUpvNzZNb3VSbEg4UlRFWU1CU2RMaWdRbTFzUTdxV1RSdEZi\nZDVxbmZNY0RpZWxHeTlWTHp6c1hYYWRob2tFNm83QlJmUm8zeGNwSkxvSFNy\nLzcreGlkbUJvblhCOVRCbTFMZGdIQVZHS3RyNStsRlUzYlZheEVXZlhsQU5J\ndWllN3V5b3JNM1V4M2FKYy84dVNQRnI0dW9qTDRsNmxwNDljTTBtVU9rL1Bx\nYTRNQWpOYVc1MFJrNDFUa0NtUVhuYVpMZEdGS01BclpQdVdaaWE3Yk5WT2xP\nWkZmL0tpMytoVmFicDNQQk43MmU1bXNvVmdDYjJpT3p5KzRxaFg2QWZ5Q1pI\nelhFMVk2cEYwRDZ5TU92Um4zR3JDenk3aU9sQVVTMnFwbjlHM1JaZ3dONnhu\ndHFLOUZSUjJwSlVBWjhRR3FGZ05peTJrYnpvR3VReVFJb3MrZytSQ01VOS9N\na2lmbEU1UExlRUhnNWFKY1JvQXl1MHNtRGZyVFVCZXdSTEx0N0N2dm9kS1Fu\nVEhWL0xMVEhvbDlyVWRFRGdKdHBlc3Z4UnB4TU14VTZ1QTN6ei9YWmRMcW5V\nd3M5MThzbnZGYWV0OWhsZ3ppNGl0cGpKdWRVNkpnUDhkNzUrNTk5NTRKazNV\nUUd2NWVvdWFZNGljaGdBTlA3OUdMcUtjSTJKdGE1UmZVdG12ZzJKOGxHVVNP\nZ3hOb204LytPeGFBcGVDdGRSYUtxWWczMzVsQlRvOTlEamUwY3J4VEhYRVBS\neUQrZGgyM0RYWkVSd2FFVDJreWxmNGdzRlV4UWVkN1FDWE96dzk1MUVCQ3Vk\nbzFuVFJ1TzFuMlY2d1hmU2ZIME9WczhvUkJIa2N1VGdLUERKVjRZUjZld05l\nNUFtOEdtWUFoTnJTb3hZVndjdVNqTS91MmYybDZyQVZsN2ZiRkNqem5QbWRU\ndmRJMVRNMlpHZWx2a2o5RnJBdi9qaTBBS0tkWUlKNU5OM3loTmNnQk14d0lW\nNnQ1aDg5dXhkN2V2SEJiZ3hINURqVi9rWjhNdWxlYzlxMi94a2ZIdmNENzU5\nVE9NanFHcHM4a1ZJYWV4dVRwWGs4cDVtQ0tja1h3RzQ5eWw0NlFRRGY0Tzh5\nMVdValRQbGFwU1NEOTlwZnVMcFdzeU9RZFd5UDIzR3JpdHJXTGhMZnJPTmVy\nQy9ycElGZmM0V1FReC9VSHZFTVZtckRrb3BhL3V3VUtiOWN6cW52V1o0alNQ\ncGpsbVdTRWQ4bDdMMm8yaExKVU1XdkNCZk9MbUd6SjlUbFlyWDh1dVBsSnVL\nYlFTTnVmdktvbG9hV0lrNlJ6YURYV09rdDRzNGh5NVV5V3Z0TEtyS05ENUtE\nQnFhcnBodFVLSlBSbjNiZ3VCZnk5anZNUWtINWRhUk8wcVpHZW05TzJ2a1pu\nUDFscnBXYTNhZ21jN3ZWYVZ5NHBkb0FWMCt6NnB1M2J0SzZWR28vMXNVa1Jz\nK3RXOGN5eFlJWXRVNVVNWUNaaEV1WnRCLzNZY0RZS0NoRW8zUEhIalk4ODJo\nN1VrWmhwQjRRK2N2TVVVaGc1UDluVkdNM3FBOGFuYlNlWlFzODNPUW1oR0dC\neFhlT1N6cUNya0ZSSURSSXpHS0RGdGRzbU01R1V4UWZpNEorYWwyelhtZGtP\nVExGa0EzVDhuUlJwbmlpK2IwbFR4WDdvUEhZZjJIc0tHUmMwQnBuZmdFRHFF\nM25FUG5IOGdIY1VYRm4zWmJDREdyVWllRXkvUkYzbDZPcjRhdVFFeFhSUVVC\nSHdCQ0pmK3k2NnhRUXplbmlQYytGVUsrMDZMQ3E5N2xOMm5STDlqY0E0QW5m\nQzcvdXo2Q0ZvN1FxdVV3dlZlaE5oZkxQVElpelNycGU3emF4TDJFUm81bFdC\nSjU2K0YwOXhFN2dlVzMzOFZ5U0JWeVJZajZQRTUvMFhmajh0LzFBbjU5aXRj\nTU5yYVk2Qk1WYjZhSnFjdEgvcmRHWVRNcDZDak1USWlwMjQ2Z2U2M0xnYktG\nYXZrUi84NHFyWGlWYklOak1TNVlGWmFEdHlWZ3lCV3NrR0xsT2hVTWQ1M0s0\nNVNDWFA1am9tYzkweEhTL0xoeXdDdTlvNjY2OFZJVUZUTmMxY1daV0U3NDZP\nTXhSaFJMaXpVSEdROHRrb0pqNkRWVmxPTmY3dEFwaHZQckhZdFVMVUEwaVlW\nMWtJdlRLNTREYmptajBSdFQ1WDgwUGJEZ0t3aGZ4YWJaRytRLzBSek1vbW5Y\nZXZSSDZwcUx6NHlqRWFuaHJkMVpCditSTHhLNzdtVkN4a0Rzek00YWthMzZC\nZC9lZmJ4WHczbFFOdHArUG04aTBrdVJWUVVoYjZrR3V1MXdLQTBxRDZKOTRS\nd09kWGwvS01qNUx3SnhoQTAwL25XSkZFbG5hdXl5aXUzTmJEczJZWWwvS3pD\nc3VoVC9SSkl3QXJWT24rT0FVMnFRZzFsQXFBYWxNVEppbHdQSmJXNUtjK0Vz\nNWhQdVpadE8vNW9VbjJ5cjVLaFFIY241Zmt0Mi9DQnB0SkxZRDAzSnZzVUlM\nUzNVQmxBT1hQUzJ0dlhGak1tWElHMU5xNytLUU1RL3BEQ21jZ2hzbG1XZXdL\na1RmeTdLTDlpbmFQUVpCanYvdFpuVStVOXgvcjlMWFpJN3ZtUHdJMlh1QUF5\nSlA1NnNhRy9UNEhEUFV1dno0bFdhNlZaa1daeTJJb3pEYy9wcXJsSFgxdVBQ\nZFIzMEEvKzdRUmlLVVBkRWdqWUFDNXpReWwvakxNR0s1TDFRYTlRY3preTRy\nWnppM3B1MGtDRVo1bHBMbzRmRWVPcTFFNXN6OXUyQ0RabExLbHVDamMzb1dt\nUE1aVnNGbXNYSUZ4Zy9mcGYrTm00RkkwUjNjNXV6NXh2QSs3TVpFYmJxVTU0\nZzllazZqOG9XRndmYmdSQ3hDUlUyNXl0TGR2ZmJTYkRvRVBIRW9GaUt1SGNs\nM1o0VnFJUUVCdEQ5aktWRWFjVXBYQ2doNzA5Yll3ZTFMYXR1d0dDWklhSmVy\nZ0xVakJFV29lV1liZ1NKZEZxRHpDdkNWZjEyK2NreURFNytJemorNmtkYmZC\nUkM1a1hwTWkxV0NLM0h2dExyNDFkelJkWFF3ZlpEY3VFajYvWGRkS3dzV0xJ\naXdoOWhUcFZkTXVwNExoZHBXem5GTk5IZUtVaTBPekdrQnUvdDd6WjFnZVg1\nREJKdTdvRFp1b2d3RkVoSERmVHEzMy9LbERndXpWTzM3Q1hvZEVpSUtYREY4\nSkZwMEwxR2ovUTBCSzYrVDdOblZHMVp6dEthK1BSRnM4bHB3OVF4MEF1dkZw\nMG4yOUpjUXFNSnpzRkJHc3pLVGhFeG94YTl2VmIwQnNuNW01Nm0vQU5qdVJQ\nRStiRGhZVlE3WGsxbDdiMGxzYjNHSmV4L3dUMWtHKzN6bGJlRzRlRXk3YUVm\nV2VrUDd0N3VPcFI3VHVSc21wcUEwWDdQaUFxTFNlOEpIS0tqQUUrbWlWTS81\nakRydGhQdXZGWXJTU2MxdU1BVlZsTkkxRnFOZlVrdTRVN2ZjVmFuV3llQTRS\nN09TUjZyaDFhSFNHTngxN3hvY01ITUFhOVROMzhyTFVsWE9LMnlXZW1nUk5I\nMVJnV0E3MEJDc3FVcWloT1VQS2lueU5pZ2tMalZmV0p1eFFVT1YrZk1waUhH\nSC9wNUFyY29WbUJVbitHUm9Ja21VRk0vdDRjU0RmekR5clhYNzdJS3E5TjVk\nNVBPNmxmRTZHa2Q3cUh0a3JEdjlrTjFKM09IQXJ3bDdqdEUrZU1EZUtxc0Ri\ndSs2dXdmVmRielFucnVzZjZkeUFoQzhERWh5YVJ2NGJMYks5WUVKSFBNdzZh\nUkFhTzVpZk9lQUdrSWxnN0VXcmVGUmx0bml2VEVleW1nMDBZVis3SHZlS2c0\nL1pBSVBFdkJmb2l1REJMZndSa1YzSGF2OHR2RXpLQVp5Vk82WXZFSXJxaFpH\nc2RjblZXa0hCSmFSYURFV2NEMVN0d1dCWVk5MVAvWXo5MVc0eGp2M08wUUpG\nMnIvSVdzMDlqaFQ5U3E1cTVHSmxibmU4V1JRT3AydGZGV294L3NjTUtadVdk\nYVpTNjVUZ2NRYyt1cnYvelZMc2duTHNyRG9rRGQyWVVKb0dhWFZMSmJHdHFC\na3RqV0cyMGorRjFFTER3Z0RESG1EZU11dlFDY2Q1SXlMRk1yeXByNjVESkQx\nV3F6TndDM0U0QUFPNU9abHVQNWtiWURCOFc2NUZmN2NSeG5ucVVxRHBjUUQ1\nK25HZEdqWSt0L01JZURhZEFpZk5aZHE3R0oyL1I0dlNiK2hxd3B5REVPWWJy\nN09RdW9OK21QUnI1dENiSTBxYmJKTDM3dDFrbEtJOWZrZ0VhQWJnblhPWG5D\nWmtMaUNyRVlZbnU4bEd3K29wd3Z4VjA3MTVENzFhS2pZK05FWWRQSVY0UjE4\ndE9LUW81ekJGdUVrb1lhYlA4SzZyZm1RdkZOQ2RyZDhnRFAwWEhURUNQN2Z6\nZURZMS9JZ21DRGU3bktQaTJVc3ZTV1JlaWNnVi94d1paVzdNcFhjdXpRZWZC\ndFpaamdadHRuVjEwWWFDMXhhK3Y1WitNa3NBcmFpaFMvYk81cnFjM1FjVG5l\nMEM0YThib3VmeDMreVNMMnRiUFdXdW1vdy93YmlUeGdaTDhHOG56VURnbEFa\nVDNGTmNVcXF2S21zS0tqQmF0aTMwRDJJS2o3QnFtYWl1S2tXOC9uQWJJcmVO\nQXpmOU5PTEZJWFYzVnhEVmhQTVBTdXdqaW1ydDcreENWUjN0cEZRR2VhUUZD\nbnZySjhITUcvT1JHMTRDYmU4OGt3alJFSTBXdzdFZlQ5SEVqRjhlTHltZHpa\nQmxiYzFwODFnWTJqWkd3WGREOUc3QkdoRGVqRHJqTE5tT0t2V3pxd1RoOGw2\nNlVNbURkK0VoVklPeTVSY2RkdHBWT1ZJVUJaV0ZkYnErVjJoOVJKZjVwMERV\nTEhTYUlRS0hxcitJbVZCZmhCYWZvOE03ZDJpa2c1ZGNKSDZqQnlELzhFbmw2\neTVJVExqVVFITW9LWThBT2NTNWlQbjF4N0J4akR4eFp0bFp5eGJiV0U2NHk4\nV1ZLcUtiWGJMeHRHcFZOUCtvR1luSjZ0TFUzNnBMVFFSWFpBckFUOVlINVpn\nZjF5Y28vaEZrRmZ5RkZ5REI2VUMxVDZmY1JhamRjYjg2ZmY1ZzcvTkRIT2VC\nN0dWYktuWFNyK2I2d0tyOEJGL1NjL01IdTFwMWxDbjl0YXMzV0s0TGYzWCs4\nUlVHS3ZnVGhxcEpjWkFPQnRXZnkrSmJNSnpxd1FUSzU5NzJmQmMvRGR4Nm5P\nYlVyemtpNTc2cG1vRGRnbDBqK1JKNHlZMHFzY2tPYWp4REdTNk1LS21hWUkv\ncTNNL0ZuaEhWZEhEZHZPTHloTzJMVzVnbzBPWTMyanNUdmZXYk9OM3htb1Mv\ncm50eVRSTTZIRE9ZdDJYdDVNckdSOGREV2Zia1F0Z1BGendXdnJZR2Z3VElU\nSVJDUTZlaFFtVnlmZEZSS3FkcHc2cm91ZmwxZjRxNEN5c0xoZlM2cWVyckRG\nN3A0czBlVE9MQXVLSHZHVWhzRjZudjlPZDNTK3hkUFdGQW5ZZkdKb29QbjVN\nYTB5L1hNbEdWeXNIRHpadHJIQ1VxVXlML2d3emJ2VEFoeVVWQ3Y1WnBuL0U5\nTS9yZ3JRdHRRR1BPTEcvNHB6ajdWM0hIalF3U1FEZS92L3dQNlhMaEVtanFk\ndnZQYVQvSFVpQWxKQU5GakJieXIxRnUyVytIbWtnaGZnd1BmYVJ0NnFpdWFm\nY3FUUDRtQi9BWVoyK2UxK2J0RW9TcUFsRjBLSSttYnZPVW5ZY0lySTJvWGE5\nNEY2c0JIeDU2YnpLWG5mV3RYSDdhQTJhSGNJSXJvME1pMzVaTUhzbnpXU01B\nWmVFbVlMbVJkMGJFb0xQeklzNnE0SmlINzB0Yi9UQmVUa25MaGhYVncwOTdq\nTEJGRnhpbXI4azk0elBKTkhQejB2MFBjL3M5Q2t5SFFyUEdhVnVjTlYzbGlw\nc25JaXd6Qk1TZHo0S3dRRmF6c3pSSXVCQXExWktyNHp0aUl1QjQzVjZTdlZU\naHBvbVhaRCt1dlRyRjJESXRYRnE0bmRISlFKUnVnclE5cVZGOENjMGgvQjBa\nREUwNVdzRVNNdmJCNkhHcHY3SzNvQWY5QllpSHcwOVdSSERBcUVYaWpjNFYz\nTUYxMVhWNUJCUk9UUmlnTVZuVlkwOEtsRUVvL0h3NE1ZMEdwaG9iOHhEaXg2\nbmJ2LzJoWHpyV3BZd3VTQVBqQVhySFlEbGp2WHZQMldKTExMTFo0amNNa2tj\nUnBvWm9UakpSeDB1SmMwdkFFYjY2WUFyRXdDbWpmMnkxT3YzQ0piWnFEOVEx\nTm9wL3BHeXVORlFydm1xd0N2YUtPMVIybng0OEJaOUpYazJGQW4xSjBSQVNz\nNkFVVXQ3MGc5K282aWd1aG9tVzNEdkhHbHRtQXlvU3d5NTB2N0pqSUI5QkFI\naXMvd2YzL2h1OVBWcllscll1ejErbUhzeWd1WGpkS1dLK3dmTnhTUG5QUGlT\nYlZReXVHcVZnclg0Uno2M0Z4ZGtsRUh4KzZEVmU3d3ZBdUFBelAyR1huQUhD\nL291QlhjWnZHdGhJQnAzMjJ2SnBWbGhmZ2ZQeWRvUDJJM2dncUUwVXc2OXpa\nN0NZaU9oVjdub25TbGE5NXVtOHB1c01WTXk4MVQ2bklWUkl2cHcyem84SWMr\nTXNsR0lKMjlEa1N3b0NhQVM0OVI4bkFmeWZrMkJpYTFJMEtqaWVoTUhEdWNy\nNE01dlFLQkFSb2pvejU2MUxxQU53TUFDdFdrUU01d2dqV3F5LzRrM0ppRzE1\nQWQ4cGJ0cGxKNFhzbFp1S3lZMzJZMS9SREhJNDBwK1F6dndpQzJoZkttTGt0\na0hITzUvZGdUMm91eGkvaTZsdjVGNEVzRU5pY1p0NUJHekR4ZEM1OVRQYnoz\nWGhnTGowTW12V2wyM0lackxJazBLM1d1dDYrLzRnU21FOXNpSTJVczVoT1Rm\ncG9zNlNtczdFYzE4SlZxckJsSlVlQUJnYmhlWTV6QnFnVUJqYmlaUEJoQjhV\nMkVuMU5raVA0Y3Q5Lzc5VnMyNzlxU1ROWHdadmZ4N0NkT3dxb2g3NStSQi9L\nWEZjVUNORmkyY3ZGLzV4dUk4OStveUJ5WXlWMER0L29iN2VuczlNQThpZzRv\nZEZJSUpMZGZQQ3Z5ZUdPeTZoTm53bDY0OWR2UURDemYxWm0rVmFtNXNMc0tw\nWllXaUpZcjhxUUhJOG11d0ZncmYwYmttSWdTTVFhZ0RYb0g5WFhnV3JIemdt\nSnBVa3A5cFRZbjNUaXU0Mnp4cUlRNkYvRWF3MlhiNDEvR3VDWmZWckZzVHl5\neW1xdG8wb25pMVhnNC8yQktqcTczSzczQUZIdzVEVXZFWjN6SSs5bWVIR0tz\nSGtGVytmMnFwQ1FXUko3YlBhZ0s2Sk9nQ04rRFBsTHQrMGdLNmJ6cmVIbnFu\nTVpodnJhL2JKMzJtc2dScXBLZ0t3aWdjNmVGc1dxeWszUVIvZDZtcnFDbEVS\nTXpkV0NwR0NCdDJ6RFc1OW5MQ0lQMDM2MDNPVnh3NGhnVXRlTDkycDVDTnB3\nZmZWblFyK28zQzRJVzNJcUt3OWlkaVVRL3lENkhQL0l2NElaWGFldmR4aW81\ndzkxYXR4NkxvUm03Z2hPQmYzTzUreUN1cnlpcGZmVjIyUFNzNzRhaHdPZGJx\nR0dxK1lCbktneThZb1NUYkxWZEw2N0lIaFRPRmp2RTFQQU56YUtKOEdJMzEw\ndmhPdmN4a2FJYzBIaFFWQTA4MnlveWdWbllKOWJEb2dIbFVyaEJuTk4rMkl0\ndWVJM1BJTUJpdTU5NkdlL2J3THFjODVCSmYrdE92VzZNUlJKTFF4UWV0bmRs\nRW9JbXJLd0ljWFp1bmFhSElzRXBTVlBmejdmQVJkYkZGZlVRazJ0aTc1bnZV\ncThldjZDTHVraDhCbmt0UlNqVFRBR2FlYVpCSlBmRGoyNzZpdHpzVXhzeTdN\nQ1hMbTlsVHNidGVwUTNEL2tTb2xKVGh1NFM3RkxyR2JEODU2eGRFRzk4YzhF\nU1ZINjNyaDc0aDhtc0JHUkhRVURTNHdVaDNVNWVWQ2NJWUFQb0U5dnA0dk1y\nbS9rQlpjWGVEN1VDM0F6R0ZmYmRRbGswMldUdEwwWE5VMjMvK1RldzNrTTF5\nWnVpcU9QUGlaL1BjOE00bTBPN2dUd0IvVkE0ZVp3bnpOWEdkbGk4UWMvcnpB\nVkRBclI0OExjMHRYbkNxc0tIeDZPcDlrU200MkVVL2FJcTkwNWZoTXNpN2gv\neVhQWFBRdG1jUE53cHk5YnVMR0MxVlBEVTZKZ1VzOGJxMDdldjRVL0c2cTc2\nNmVuU2daZUVuZU1jVmF4RU5hbkFXaXdUZXJtbG5FZDRWWFBTRHlSMGVrOTZ6\nL0xnV25mVTJ6ZlI5MFEzdXNmN3F4ZDl1T3RrSGpRci9IWmJ4aVBpQnZNRDRs\nSTVYRmtDUEg4djBPeDhQcHdnMG5ReVl1c3lnZUpMNTlCajdSUGt1VCtPV3ps\nZnNINlM4cUlpWDRmQXhBZnhPWWJndWxpVlNxYXgrdjJKeUxHckJNM3o5R2tW\nQjJHQ1VpVnp5MkZOYnFUbkM1TFdqdjN0UUROR0lhb1VacHhCVHlVRnVZQWxi\nNWdTemZTcDZiOVZQMHhOUmdoc0xIY2JkMDdFZ0JFRHBiVjBoYjBNN0dFNGo2\nUHZkUlFxT3dTZHd6NWpHVTBTSExwaDhvcTU4TWVsc2NUckEwUnVSMVFobzZr\nakpTNHJjVjU3WlpkcXFGQWhiTHo4SlhvMzIrZng2eU52RW5rNTEybFFYNy9R\ndGdPd3pEbTA3S1JIekxIcHRjaEZhQ0tYUWJ3U2xZbEdOa29BbVpMbUJMZVc1\nUkw3RVdVMzRiVkhDM2k5T2RoMm5JNS9OQWY4S2xLeTZmS1JVcTFROGJISDBU\nem56TVA2ckRLYlBGUU1zWWlIQ1NpeHlpbXJRQ08wWVlyMU50dy8rVFR2eUxR\nc2xsd2VNSVNTNHJsdTBzOFNmN0l2b3Mxa05DZFkvWEN2M2VxQXlvQjIzREtm\nV09RRDZCZFNDNlpxZ2VWcnZWTGdFTUpLZW8vckFiczF5QStLUzI0T0lZaGxr\nbWwrRDZKSGVydHdxZDA0NHJGY2VTMCtTSWp1ZjFsL2pNUUFPb1p0WnpyVFcx\nSlg2L0o3L25HRmw2Z2xld0dqVzA3YllXRkcyTUladG1HeTdSRGp4OXJhUjNQ\nVjYyZFBSNjQvSDJLRTJFV05Gd0xtN0RmZ1M1OGNPRjBjQmpHME16bGhRSm9i\nTDF1bWNKaHpaZ0ZoakJWRXI3dmhRbkU3d0w1Wm0xTmhBY003bDRtemZsYmFr\nR3pNa0VZNVBFWkRqelRySDZtY0tEa1V1bkRjWXdNYmVtT1g2dy8rWWlkZUVY\ncDd3aFJQUVZrSm5MZzU1MlFyNmhLdzFGRGJmM3J5Z0sxWDlyZGpoZWFlT3I5\nb1g2RU53OHJTVDM3ZTNheVdKMHFlQXR3eGxnaUdRTkVOclhZUTVkQTY0YXZp\nakNYeUVkaUJVQjlaVnBPVUU1eHpQNWxtclhEdnF1QzdYR3hKQUpCSFdobjVr\naW1WYituZnBBK2VkdFhTbHNVeVBZYWhQYXYraFJBL3ZUck8rekZmb28wWlVz\nUHQrNmgrekgzbWZJMTlHbFppV1RRNDFVM2RnTlFSeUd0OHRDUENqZlZJV2tx\nNGRuMWpuRGdibElvWjRCcFg0Q2Q2bUJmaEdjc3JtS1l3emd6dW1kODF0T25K\naHMvdjVleFRMZkVoK0ZjQllkZ1lBWXFDU0FvV0h6SjMrNlh6OGZNczV2RVkx\nMmhDWjNmZDM2eG9sTW9UV2NFWm0zV0RQWDcwaGRxSWpGcHFWWmJreTZrTm1T\nQ0hrWTB0Q3FPT2xGeG42eVBvM3l3MlN3RmgrVUNPVmxFemxscU9xcTVLd3Nl\nSVRoWG9kYlJjKzZYTkt1NDBna3VNajJtdW5tZTNzNW1wZ2gzWXRoZHBacFNp\nRWc4OEEzbzIrQ0JhVDBPcFVoaTA5OTBhSStQK1BDamVYOFF3UGcwakwyUytP\neDNtdFd5WEYwemlLOUoyMmVJeHJIblRzVFdTTHFnaVhPRS9MeTFqbEd3ZTB3\nNGNwTjFDU3NKSjlFc1E0RHZOeHdab1hmVGtTdjNQUzl1U3BjU2hzL0NDMldL\nSHpVMEN3eThvTkZLRzhxNjhtNWF6NjFEaCtYaEZHUlZHLzNsMXVocGlDSG9T\nNS9wckFKOWJld0RndEhsNVRJRDN2Wk1Ka1lSQ1BSWHBiaHQrZ1IzUTVFUHFX\ncVNIald3UEZTNHhqSnRzcmNreFdIWDAwUStPWWZueS80Vll4TUQweDdpV2VR\nelJmd2o1cExHS2VVTTdGUkFFRG90ankvREowNHBTeEViU1kvcmhFMEdTT3Z0\nNEJScHYraFFlZFVaaXBGK21mNThrNjNZSTVKZ2lYSlVBcE9ONDRyMTBHdFBG\nWWk0WWl1TzN2RTJBVGVORkFrWU1NM3dOMGVWS1BYSG11cXZLeUdBR29iVjVq\nZm1raFFCakZFL0hpSU14QmtxdVF6dStFQzkycTJZRVZkRlNMSis5aWJrUVZz\nbk5kVHk1ekVsbGlBbzRjaGZGM29OdmZRTEhic0w2d3Y0SS93cU1XMERybVJh\nZ1A5VGVHVnJLRVpiQ01oTnUwL1lML1RDL2JXOGNNVVlyNC9mSGRPL1hxNXNt\nWis1STc1QWUxVnZGQ3UzYndrWGVOc3VlbnNoUGxkNHRFRENsT2V5UXBVaUFv\nYzFPSDgwaTdZUkJPV2YyRXl1M1J1T0x1eUhrZXVWVUZhQmJIOHl4U3NGa2hj\nOFg1L1J4SWR1eTkvaE16QmFkZWd5cHdoMko4VUZSZWVqdmRQNzBUTkR3Sk1G\nb28yMVY3Rm1LZGxRb1hEaTBsdjF5Q2hSSUxDT05rUHJwdGR6eEVVaVFKdlJx\nMkJkYVBpMHVRejlzS0J0V1ovZDRTTUxNeGdtMW5FbE9kQWNrb3pNNU1MOEd1\nZ1p5RTd2SjQvRGdXNStBczFhR0xoNnlpTnRKM2hTT3ZaOGowOW56Wis4djF5\ndmVRbXZXYVdQc2h1Rkg4UnM3dUxYVUtNTk5Jc3dwZ0dXVHlRc0VxbEZ5THFI\nNFRLTjNJSXZlN1E4Z0RoWURDRHo0alBlb254Rk5JajhDSDBwaFd0YWwrYTV2\neEJFWnlaK1U2bFcwTFBKS3NwSkY0akx4Vk9OZ1h6QXdCVThIWVNQdGltTkZM\nNEFqbGVReXpENlBFZm53V0V0ZnZ3QmdXRm81SmRaeTMxbXVkOFdsMUVoVDB4\nYnIzTHZ1aTVqT3k1MnFHYnRueEZVQmVUYVBtcUJxVThYU3dqVW0vaFZuaFJE\nUzlwaVNhNFR2YlJtNDJwYy9hNjZVeEtvaXF6TjQ2RVFhZ2lJOVpwSlh1VW1X\neUpRcW9OKzZUbEF5NC9xZmRZdTBpWHNBNTliZDNiaEQ3UEMxdWNyN0M4OW9F\nSUFyUkxwa1M4eWdFanUwT1RLaVRScm83Y0k3V2YyVnp5V0NDUFVGR3hTQmZ2\ndjMzeDRHcW5LdExFd2U2bjU5ZW9mZVAweUl3aXBnaXhGK01GSksyV1FNNTly\nNWYxQ0NxYU5SSmhRakhVSGNhdHcxZW42YXFSWXpCbmdQcllNcmxqTnNCWk1E\ndkxYT1FDRUxJRE1MUW5XSjlNUjJQVWZSL3pQSzI5L0NEbG9kM3RkdnlMelJz\nQVAzaVFrSml3Wk5mdkgzaVBhalRkUEpYVk9Yc1lEV3BtM2dHZEFJL2tYS3ND\nL2lzQzl3NmdmQ1RTTTRMTllYZWNuQis4OVRvRzdEZTdWY0t4b0NZWml3M2RG\nNDBRdmxMcWRRSCtjQml1TytzRDJBcW43ZDd2RGtXVUIzd3hDZm9RSm1sb3pC\naG5saUlkMFhDY2dtcjg0NVZtSFYvekg2MkVZMVZ2YTNBNjQ2RG5NMnZ6ZFJv\nSUtuUlZnOEJrdS8xRkQ0OUhGV0RkY1hQRnVZMzE3TW9zb3dXNXpBYkQ0dz09\nLmhEeUlkMUhIYmM1WHhGOVUuZ2tNS1RxT1pEejM1K2VoSE9rTyt3UT09Iiwi\nc2lnIjoib1NlUEMvNEFETjZLVjBGV3MwcU1FbjdUSGdyQWFpNjAxMVNRcXdY\nTVNRc3U4T0E1ZUV5QWF6MHhqZXMxNG5KTDZndjR6aWc1VllUZllZVENiUmhX\nQlE9PSIsImFsZyI6ImFlcy0yNTYtZ2NtK2VkMjU1MTkifQ==\n-----END LICENSE FILE-----\n";
const KEYGEN_LICENSE_KEY: &str = "988214-879010-F1185E-B37E91-E53AF5-V3";
const KEYGEN_PUBLIC_KEY: &str = "e8601e48b69383ba520245fd07971e983d06d22c4257cfd82304601479cee788";

#[derive(Deserialize, Serialize, Debug)]
struct LicenseFile<'a> {
  enc: &'a str,
  sig: &'a str,
  alg: &'a str,
}

fn main() -> Result<(), Box<dyn Error>> {
  // Parse the hex-encoded public key.
  let public_key: PublicKey = match <[u8; PUBLIC_KEY_LENGTH]>::from_hex(KEYGEN_PUBLIC_KEY) {
    Ok(bytes) => PublicKey::from_bytes(&bytes)?,
    Err(_) => return Err("failed to parse public key".into()),
  };

  // Extract the encoded payload from the license file.
  let base64 = KEYGEN_LICENSE_FILE
    .replace("-----BEGIN LICENSE FILE-----", "")
    .replace("-----END LICENSE FILE-----", "")
    .replace('\n', "");

  // Decode the payload.
  let payload = match base64::decode(base64) {
    Ok(bytes) => String::from_utf8(bytes)?,
    Err(_) => return Err("failed to decode license file".into()),
  };

  // Parse the payload.
  let lic: LicenseFile = match serde_json::from_str(payload.as_str()) {
    Ok(json) => json,
    Err(_) => return Err("failed to parse license file".into()),
  };

  // Assert algorithm is supported.
  match lic.alg {
    "aes-256-gcm+ed25519" => (),
    _ => return Err("algorithm is not supported".into()),
  }

  // Verify the license file's signature.
  let msg = format!("license/{}", lic.enc);
  let sig: [u8; SIGNATURE_LENGTH] = match base64::decode(lic.sig)?.try_into() {
    Ok(sig) => sig,
    Err(_) => return Err("signature format is invalid".into()),
  };

  match public_key.verify(msg.as_bytes(), &sig.into()) {
    Ok(_) => (),
    Err(_) => return Err("license file is invalid".into()),
  }

  // Print license file.
  println!("license file was successfully verified!");
  println!("  > {}", serde_json::to_string_pretty(&lic).unwrap());

  // Hash the license key to obtain decryption key.
  let mut sha = Sha256::new();

  sha.update(KEYGEN_LICENSE_KEY.as_bytes());

  let digest = sha.finalize();

  // Parse the encrypted data.
  let data: Vec<_> = lic.enc
    .trim()
    .split(".")
    .map(|v| base64::decode(v).expect("failed to parse encrypted data"))
    .collect();

  // Set up data and AES-GCM.
  let mut ciphertext = Vec::from(data[0].as_slice());
  let nonce = Nonce::from_slice(data[1].as_slice());
  let tag = Tag::from_slice(data[2].as_slice());
  let key = Key::from_slice(&digest);
  let aes = Aes256Gcm::new(key);

  // Concat authentication tag with ciphertext.
  ciphertext.extend_from_slice(tag);

  // Decrypt the license file.
  let plaintext = match aes.decrypt(nonce, ciphertext.as_ref()) {
    Ok(plaintext) => String::from_utf8(plaintext)?,
    Err(_) => return Err("failed to decrypt license file".into()),
  };

  // Print decrypted data.
  let obj: serde_json::Value = serde_json::from_str(&plaintext).unwrap();

  println!("license file was successfully decrypted!");
  println!("  > {}", serde_json::to_string_pretty(&obj).unwrap());

  Ok(())
}
